//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: Tests/Redola.Rpc.TestContracts/Calc.proto
namespace Redola.Rpc.TestContracts
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"AddRequest")]
  public partial class AddRequest : global::ProtoBuf.IExtensible
  {
    public AddRequest() {}
    
    private int _X;
    [global::ProtoBuf.ProtoMember(10, IsRequired = true, Name=@"X", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int X
    {
      get { return _X; }
      set { _X = value; }
    }
    private int _Y;
    [global::ProtoBuf.ProtoMember(20, IsRequired = true, Name=@"Y", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int Y
    {
      get { return _Y; }
      set { _Y = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"AddResponse")]
  public partial class AddResponse : global::ProtoBuf.IExtensible
  {
    public AddResponse() {}
    
    private int _Result;
    [global::ProtoBuf.ProtoMember(10, IsRequired = true, Name=@"Result", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int Result
    {
      get { return _Result; }
      set { _Result = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}